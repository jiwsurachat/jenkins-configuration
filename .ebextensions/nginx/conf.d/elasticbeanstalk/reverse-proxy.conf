server {
  port_in_redirect                off;

  listen                          80;
  listen                          [::]:80 default_server;

  server_name                     localhost;

  # when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
  # to disable content-type sniffing on some browsers.
  # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
  # currently suppoorted in IE > 8 http://blogs.msdn.com/b/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx
  # http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx
  # 'soon' on Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=471020
  add_header X-Content-Type-Options   nosniff;

  # This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
  # It's usually enabled by default anyway, so the role of this header is to re-enable the filter for
  # this particular website if it was disabled by the user.
  # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
  add_header X-XSS-Protection "1;     mode=block";

  # config to enable HSTS(HTTP Strict Transport Security) https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
  # to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
  # also https://hstspreload.org/
  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";

  ##
  # Gzip Settings
  ##
  gzip                        on;
  gzip_http_version           1.1;
  gzip_disable                "MSIE [1-6]\.";
  gzip_min_length             1100;
  gzip_vary                   on;
  gzip_proxied                expired no-cache no-store private auth;
  gzip_types                  text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;
  gzip_comp_level             9;
  
  root                        /usr/share/nginx/html;

  location / {
    #index                     index.html index.htm;
    #try_files                 $uri $uri/ /index.html;
   
    #For support Appdynamics gent appdynamics extension required "ngx_http_stub_status_module" or "ngx_http_status_module" enabled.
    #https://www.appdynamics.com/community/exchange/extension/nginx-and-nginx-plus-monitoring-extension
    # The ngx_http_stub_status_module module provides access to basic status information.
    stub_status               on;
    #The ngx_http_status_module module provides access to various status information.

    resolver                  8.8.8.8 valid=300s;
    resolver_timeout          10s;
    proxy_pass                $destination_domain;
  }

  error_page   500 502 503 504  /50x.html;

  location = /50x.html {
    root   /usr/share/nginx/html;
  }
}
